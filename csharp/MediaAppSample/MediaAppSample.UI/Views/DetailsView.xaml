<!--
// The MIT License (MIT)
//
// Copyright (c) 2016 Microsoft. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
-->
    
<views:DetailsViewBase
    x:Class="MediaAppSample.UI.Views.DetailsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:views="using:MediaAppSample.UI.Views"
    xmlns:viewmodels="using:MediaAppSample.Core.ViewModels"
    xmlns:models="using:MediaAppSample.Core.Models"
    xmlns:controls="using:MediaAppSample.UI.Controls"
    xmlns:behaviors="using:MediaAppSample.UI.Behaviors"
    xmlns:resources="using:MediaAppSample.UI.Resources"
    xmlns:designTime="using:MediaAppSample.Core.ViewModels.Designer"
    d:DataContext="{d:DesignInstance designTime:DetailsViewModel, IsDesignTimeCreatable=True}"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <resources:Common />
                <resources:TextStyles />
                <resources:Templates />
                <resources:ListStyles />
                <resources:ControlStyles />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Name="PersonDataTemplate" x:DataType="models:PersonModel">
                <StackPanel Orientation="Horizontal" Margin="0,8">
                    <Image Width="{StaticResource StandardElementPixels}" Height="{StaticResource StandardElementPixels}" Source="{x:Bind Image}" />
                    <StackPanel VerticalAlignment="Center" Margin="8,0,0,0">
                        <TextBlock Text="{x:Bind Name}" Style="{StaticResource BodyTextBlockStyle}"/>
                        <TextBlock Text="{x:Bind Role}" Style="{StaticResource SubtleBodyTextBlockStyle}" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Name="ReviewsDataTemplate" x:DataType="models:ReviewModel">
                <TextBlock TextWrapping="Wrap" Margin="0,8" Style="{StaticResource BodyTextBlockStyle}" Opacity="{ThemeResource ThemeTextSubtleOpacity}">
                    <Run Text="{x:Bind Review}" Foreground="{ThemeResource ThemeTextForeground}" />
                    <LineBreak />
                    - <Run Text="{x:Bind FullName}" />
                </TextBlock>
            </DataTemplate>

            <DataTemplate x:Name="RatingsDataTemplate" x:DataType="models:RatingModel">
                <Grid Margin="0,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Style="{StaticResource BodyTextBlockStyle}" FontSize="{StaticResource SubheaderFontSize}" VerticalAlignment="Top"><Run Text="{x:Bind RatingPercent}" />%</TextBlock>
                    <StackPanel Grid.Column="1" Margin="12,0,0,0" VerticalAlignment="Top">
                        <TextBlock Style="{StaticResource BodyTextBlockStyle}" Text="{x:Bind RatingSource}" />
                        <TextBlock Style="{StaticResource BodyTextBlockStyle}" Text="{x:Bind RatingDetails}" Opacity="{ThemeResource ThemeTextSubtleOpacity}" />
                    </StackPanel>
                    <ProgressBar Grid.Row="1" Grid.ColumnSpan="2"  Minimum="0" Maximum="{x:Bind RatingScale}" Value="{x:Bind RatingPercent}" />
                </Grid>
            </DataTemplate>

            <DataTemplate x:Name="ItemDetailsDataTemplate" x:DataType="viewmodels:DetailsViewModel">
                <UserControl>
                    <StackPanel>
                        <TextBlock Text="{x:Bind ViewModel.Item.Title, Mode=OneWay}" Style="{StaticResource HeaderTextBlockStyle}" Foreground="{StaticResource ImageTextForegroundBrush}" />
                        <TextBlock Text="{x:Bind ViewModel.Item.DisplayLength, Mode=OneWay}" Style="{StaticResource CaptionTextBlockStyle}" Foreground="{StaticResource ImageTextForegroundBrush}" />
                        <TextBlock Text="{x:Bind ViewModel.Item.Genre, Mode=OneWay}" Style="{StaticResource CaptionTextBlockStyle}" Foreground="{StaticResource ImageTextForegroundBrush}" />
                        <controls:Rating Value="{x:Bind ViewModel.Item.UserRating, Mode=OneWay}" />
                        <TextBlock Text="{x:Bind ViewModel.Item.Description, Mode=OneWay}" Style="{StaticResource BodyTextBlockStyle}" Foreground="{StaticResource ImageTextForegroundBrush}" Margin="0,8,0,18" MaxLines="8" />
                        <StackPanel x:Name="spButtons" Orientation="Horizontal">
                            <Button x:Uid="/MediaAppSample.Core/Resources/btnPlay" Foreground="{ThemeResource ThemeTextForeground}" Background="{ThemeResource SystemAccentColorBrush}" Width="{StaticResource StandardButtonWidth}" Content="Play" Command="{x:Bind ViewModel.Platform.Navigation.NavigateToMediaCommand}" CommandParameter="{x:Bind ViewModel.Item, Mode=OneWay}" />
                            <Button x:Uid="/MediaAppSample.Core/Resources/btnAddQueue" Foreground="{ThemeResource ThemeTextForeground}" Width="{StaticResource StandardButtonWidth}" Content="Add to queue" Command="{x:Bind ViewModel.Platform.ViewModel.QueueViewModel.AddToQueueCommand}" CommandParameter="{x:Bind ViewModel.Item, Mode=OneWay}" Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource visConverter}}" />
                            <Button x:Uid="/MediaAppSample.Core/Resources/btnRemoveQueue" Foreground="{ThemeResource ThemeTextForeground}" Content="Remove from queue" Command="{x:Bind ViewModel.Platform.ViewModel.QueueViewModel.RemoveFromQueueCommand}" CommandParameter="{x:Bind ViewModel.Item, Mode=OneWay}" Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource visConverter}}" />

                            <Button x:Uid="/MediaAppSample.Core/Resources/btnMore" Foreground="{ThemeResource ThemeTextForeground}" Width="{StaticResource StandardButtonWidth}" Content="More">
                                <Button.Flyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem x:Uid="/MediaAppSample.Core/Resources/mnuPinToStart" Foreground="{ThemeResource ThemeTextForeground}" Text="Pin to start" Command="{x:Bind ViewModel.PinTileCommand}" CommandParameter="{x:Bind ViewModel.Item, Mode=OneWay}" />
                                    </MenuFlyout>
                                </Button.Flyout>
                            </Button>
                        </StackPanel>
                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <!--VisualState for 8" tablet portrait -->
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint8Portrait}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState>
                                    <!--VisualState for 5" phone-->
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint5}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="spButtons.Orientation" Value="Vertical" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </StackPanel>
                </UserControl>
            </DataTemplate>
            
        </ResourceDictionary>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <Hub>
            
            <!-- Featured Hero -->
            <HubSection x:Name="hsFeatured" Visibility="Collapsed" x:DeferLoadStrategy="Lazy" Height="{x:Bind DeviceWindowHeight, Mode=OneWay}">
                <DataTemplate x:DataType="viewmodels:DetailsViewModel">
                    <UserControl>
                        <Grid Margin="0">
                            <Grid.Background>
                                <ImageBrush ImageSource="{x:Bind ViewModel.Item.ImageFeatured, Mode=OneWay}" Stretch="UniformToFill" />
                            </Grid.Background>
                            <ContentPresenter x:Name="cp" Visibility="Collapsed" x:DeferLoadStrategy="Lazy" ContentTemplate="{StaticResource ItemDetailsDataTemplate}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="{StaticResource StandardGutterAll}" MaxWidth="440" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup>
                                    <VisualState>
                                        <!--VisualState for 8" tablet portrait -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint8Portrait}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="cp.Visibility" Value="Visible" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState>
                                        <!--VisualState for 5" phone-->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint5}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="cp.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </UserControl>
                </DataTemplate>
            </HubSection>

            <!-- Details -->
            <HubSection x:Name="hsDetails" Visibility="Collapsed" x:DeferLoadStrategy="Lazy" Header="">
                <DataTemplate x:DataType="viewmodels:DetailsViewModel">
                    <StackPanel>
                        <Image Source="{x:Bind ViewModel.Item.ImageFeatured, Mode=OneWay}" Stretch="Uniform" />
                        <ContentPresenter ContentTemplate="{StaticResource ItemDetailsDataTemplate}" Margin="48,0,48,48" />
                    </StackPanel>
                </DataTemplate>
            </HubSection>

            <!--Resume Episode for TV Series-->
            <HubSection x:Name="hsResumeTvEpisode" 
                        x:Uid="hsResumeTvEpisode"
                        Header="Resume Episode"
                        Background="{ThemeResource ThemeSectionBackground}"
                        Visibility="{x:Bind ViewModel.ResumeContentItemTask.Result, Mode=OneWay, Converter={StaticResource visConverter}}">
                <DataTemplate x:DataType="viewmodels:DetailsViewModel">
                    <UserControl>
                        <RelativePanel Padding="48,68">
                            <Button 
                                x:Name="btn"
                                Style="{StaticResource TransparentButtonStyle}"
                                Command="{x:Bind ViewModel.Platform.Navigation.NavigateToMediaCommand}" 
                                CommandParameter="{x:Bind ViewModel.ResumeContentItemTask.Result.ID, Mode=OneWay}">
                                <Image x:Name="img" Source="{x:Bind ViewModel.ResumeContentItemTask.Result.ImageThumbLandscapeLarge, Mode=OneWay}" />
                            </Button>
                            <StackPanel x:Name="sp" RelativePanel.RightOf="btn" Grid.Column="1" Margin="48,0,0,0">
                                <TextBlock Text="{x:Bind ViewModel.ResumeContentItemTask.Result.Title, Mode=OneWay}" FontWeight="Bold" Style="{StaticResource BodyTextBlockStyle}" />
                                <TextBlock Text="{x:Bind ViewModel.ResumeContentItemTask.Result.Subtitle, Mode=OneWay}" Style="{StaticResource CaptionTextBlockStyle}" />
                                <TextBlock Text="{x:Bind ViewModel.ResumeContentItemTask.Result.Description, Mode=OneWay}" MaxLines="10" Style="{StaticResource BodyTextBlockStyle}" />
                                <TextBlock Text="{x:Bind ViewModel.ResumeContentItemTask.Result.DisplayLength, Mode=OneWay}" Style="{StaticResource CaptionTextBlockStyle}" />
                                <TextBlock Style="{StaticResource CaptionTextBlockStyle}">
                                <Run Text="Aired on " />
                                <Run Text="{x:Bind ViewModel.ResumeContentItemTask.Result.ReleaseDate, Mode=OneWay, Converter={StaticResource stringFormatConverter}, ConverterParameter='\{0:d}'}" />
                                </TextBlock>
                            </StackPanel>
                            <!-- Responsive VisualStates -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="imageGroup">
                                    <VisualState>
                                        <!-- VisualState to be triggered for 27" desktop + -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint27}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="img.Width" Value="612" />
                                            <Setter Target="img.Height" Value="344" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState>
                                        <!-- VisualState to be triggered for 23" desktop" -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint23}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="img.Width" Value="604" />
                                            <Setter Target="img.Height" Value="340" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState>
                                        <!-- VisualState for 13" laptop -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint13}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="img.Width" Value="420" />
                                            <Setter Target="img.Height" Value="236" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState>
                                        <!-- VisualState for 8" landscape tablet -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint8Landscape}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="img.Width" Value="484" />
                                            <Setter Target="img.Height" Value="272" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState>
                                        <!-- VisualState for 8" portrait tablet -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint8Portrait}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="img.Width" Value="588" />
                                            <Setter Target="img.Height" Value="330" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState>
                                        <!-- VisualState for 5" phone -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint5}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="img.Width" Value="332" />
                                            <Setter Target="img.Height" Value="186" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="layoutGroup">
                                    <VisualState>
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint8Landscape}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState>
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint5}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="sp.(RelativePanel.RightOf)" Value="{x:Null}" />
                                            <Setter Target="sp.(RelativePanel.Below)" Value="btn" />
                                            <Setter Target="sp.Margin" Value="0,12,0,0" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </RelativePanel>
                    </UserControl>
                </DataTemplate>
            </HubSection>

            <!--TV Seasons/Episodes Filtering-->
            <HubSection x:Name="hsTvSeasions" 
                        Header="Available Episodes"
                        Background="{ThemeResource ThemeBackground}" 
                        Visibility="{x:Bind ViewModel.IsTvSeries, Mode=OneWay, Converter={StaticResource visConverter}}">
                <DataTemplate x:DataType="viewmodels:DetailsViewModel">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <StackPanel Orientation="Horizontal" Padding="48,68,48,12">
                            <ComboBox x:Uid="/MediaAppSample.Core/Resources/cboSeasonsFilter" PlaceholderText="Seasons" ItemsSource="{x:Bind ViewModel.SeasonOptions}" SelectedItem="{x:Bind ViewModel.SelectedSeason, Mode=TwoWay}" />
                            <ComboBox x:Uid="/MediaAppSample.Core/Resources/cboSeasonsSort" PlaceholderText="Sort" ItemsSource="{x:Bind ViewModel.SortOptions}" SelectedItem="{x:Bind ViewModel.SelectedSort, Mode=TwoWay}" />
                        </StackPanel>

                        <ListView
                            Grid.Row="1"
                            Padding="48,0,48,68"
                            Margin="0,0,12,0"
                            ScrollViewer.HorizontalScrollMode="Enabled"
                            ScrollViewer.VerticalScrollMode="Disabled"
                            ScrollViewer.HorizontalScrollBarVisibility="Auto"
                            Background="{ThemeResource ThemeBackground}"
                            ItemsSource="{x:Bind ViewModel.TvEpisodes, Mode=OneWay}"
                            ItemsPanel="{StaticResource HorizontalItemsPanelTemplate}"
                            behaviors:ListViewBaseCommandBehavior.Command="{x:Bind ViewModel.Platform.Navigation.NavigateToMediaCommand}">
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="models:ContentItemBase">
                                    <Button 
                                        Style="{StaticResource TransparentButtonStyle}"
                                        Click="btnContentItem_Click"
                                        CommandParameter="{x:Bind ID, Mode=OneWay}">
                                        <StackPanel>
                                            <Image Source="{x:Bind ImageThumbLandscapeSmall, Mode=OneWay}" />
                                            <TextBlock Text="{x:Bind Title, Mode=OneWay}" FontWeight="Bold" Style="{StaticResource BodyTextBlockStyle}" />
                                            <TextBlock Text="{x:Bind Subtitle, Mode=OneWay}" Style="{StaticResource CaptionTextBlockStyle}" />
                                            <TextBlock Text="{x:Bind Description, Mode=OneWay}" Style="{StaticResource BodyTextBlockStyle}" MaxLines="6" TextWrapping="Wrap" />
                                        </StackPanel>
                                    </Button>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem" BasedOn="{StaticResource BaseListViewItemContainerStyle}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListViewItem">
                                                <ListViewItemPresenter
                                                    x:Name="grd"
                                                    Width="300"
                                                    HorizontalAlignment="Stretch" 
                                                    VerticalAlignment="Stretch"
                                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                                    SelectionCheckMarkVisualEnabled="True"
                                                    CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                    CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                    DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                                    DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                                    FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                                                    FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                                    PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                                                    PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                                                    PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                                                    SelectedBackground="{ThemeResource SystemControlHighlightListAccentLowBrush}"
                                                    SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                                                    SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListAccentMediumBrush}"
                                                    PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                                                    SelectedPressedBackground="{ThemeResource SystemControlHighlightListAccentHighBrush}"
                                                    DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                                    DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                                    ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    ContentMargin="{TemplateBinding Padding}"
                                                    CheckMode="Inline">

                                                    <!-- Responsive VisualStates -->
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup>
                                                            <VisualState>
                                                                <!-- VisualState to be triggered for 27" desktop + -->
                                                                <VisualState.StateTriggers>
                                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint27}" />
                                                                </VisualState.StateTriggers>
                                                                <VisualState.Setters>
                                                                    <Setter Target="grd.Width" Value="304" />
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                            <VisualState>
                                                                <!-- VisualState to be triggered for 23" desktop" -->
                                                                <VisualState.StateTriggers>
                                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint23}" />
                                                                </VisualState.StateTriggers>
                                                                <VisualState.Setters>
                                                                    <Setter Target="grd.Width" Value="300" />
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                            <VisualState>
                                                                <!-- VisualState for 13" laptop -->
                                                                <VisualState.StateTriggers>
                                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint13}" />
                                                                </VisualState.StateTriggers>
                                                                <VisualState.Setters>
                                                                    <Setter Target="grd.Width" Value="208" />
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                            <VisualState>
                                                                <!-- VisualState for 8" tablet landscape -->
                                                                <VisualState.StateTriggers>
                                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint8Landscape}" />
                                                                </VisualState.StateTriggers>
                                                                <VisualState.Setters>
                                                                    <Setter Target="grd.Width" Value="240" />
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                            <VisualState>
                                                                <!-- VisualState for 8" tablet portrait -->
                                                                <VisualState.StateTriggers>
                                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint8Portrait}" />
                                                                </VisualState.StateTriggers>
                                                                <VisualState.Setters>
                                                                    <Setter Target="grd.Width" Value="292" />
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                            <VisualState>
                                                                <!-- VisualState for 5" phone -->
                                                                <VisualState.StateTriggers>
                                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint5}" />
                                                                </VisualState.StateTriggers>
                                                                <VisualState.Setters>
                                                                    <Setter Target="grd.Width" Value="332" />
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                </ListViewItemPresenter>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </Grid>
                </DataTemplate>
            </HubSection>

            <!-- Creators/Casts/Critics/Ratings -->
            <HubSection>
                <DataTemplate x:DataType="viewmodels:DetailsViewModel">
                    <UserControl>
                        <Grid x:Name="grd" Background="{ThemeResource ThemeSectionBackground}" Padding="24,0,24,40">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="row0" Height="Auto" />
                                <RowDefinition x:Name="row1" Height="Auto" />
                                <RowDefinition x:Name="row2" Height="Auto" />
                                <RowDefinition x:Name="row3" Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="col0" Width="*" />
                                <ColumnDefinition x:Name="col1" Width="*" />
                                <ColumnDefinition x:Name="col2" Width="*" />
                                <ColumnDefinition x:Name="col3" Width="*" />
                            </Grid.ColumnDefinitions>

                            <Grid x:Name="grdCreators" Grid.Column="0" Padding="24,0" VerticalAlignment="Top">
                                <controls:SectionReadOnlyList
                                    x:Uid="/MediaAppSample.Core/Resources/lstCreators" 
                                    Items="{x:Bind ViewModel.CreatorsTask.Result, Mode=OneWay}"
                                    Header="Creators"
                                    SeeMoreText=""
                                    ItemTemplate="{StaticResource PersonDataTemplate}" 
                                    TakeN="-1"/>
                                <ProgressRing
                                    Visibility="{x:Bind ViewModel.CreatorsTask.IsCompleted, Mode=OneWay, Converter={StaticResource visInvertedConverter}}" 
                                    IsActive="{x:Bind ViewModel.CreatorsTask.IsNotCompleted}" />
                            </Grid>

                            <Grid x:Name="grdCasts" Grid.Column="1" Padding="24,0" VerticalAlignment="Top">
                                <controls:SectionReadOnlyList
                                    x:Uid="/MediaAppSample.Core/Resources/lstCasts" 
                                    Items="{x:Bind ViewModel.CastsTask.Result, Mode=OneWay}"
                                    Header="Cast"
                                    SeeMoreText=""
                                    ItemTemplate="{StaticResource PersonDataTemplate}" 
                                    TakeN="-1"/>
                                <ProgressRing
                                    Visibility="{x:Bind ViewModel.CastsTask.IsCompleted, Mode=OneWay, Converter={StaticResource visInvertedConverter}}" 
                                    IsActive="{x:Bind ViewModel.CastsTask.IsNotCompleted}" />
                            </Grid>

                            <Grid x:Name="grdReviews" Grid.Column="2" Padding="24,0" VerticalAlignment="Top">
                                <controls:SectionReadOnlyList
                                    x:Uid="/MediaAppSample.Core/Resources/lstReviews" 
                                    Items="{x:Bind ViewModel.ReviewsTask.Result, Mode=OneWay}"
                                    Header="Critic Reviews"
                                    SeeMoreText="See all"
                                    SeeMoreCommand="{x:Bind ViewModel.LoadMoreReviewsCommand}" 
                                    ItemTemplate="{StaticResource ReviewsDataTemplate}" 
                                    TakeN="{x:Bind ViewModel.NumReviewsShown, Mode=OneWay}"/>
                                <ProgressRing 
                                    Visibility="{x:Bind ViewModel.ReviewsTask.IsCompleted, Mode=OneWay, Converter={StaticResource visInvertedConverter}}" 
                                    IsActive="{x:Bind ViewModel.ReviewsTask.IsNotCompleted}" />
                            </Grid>

                            <Grid x:Name="grdRatings" Grid.Column="3" Padding="24,0" VerticalAlignment="Top">
                                <controls:SectionReadOnlyList
                                    x:Uid="/MediaAppSample.Core/Resources/lstRatings" 
                                    Items="{x:Bind ViewModel.RatingsTask.Result, Mode=OneWay}"
                                    Header="Ratings"
                                    SeeMoreText=""
                                    ItemTemplate="{StaticResource RatingsDataTemplate}" />
                                <ProgressRing 
                                    Visibility="{x:Bind ViewModel.RatingsTask.IsCompleted, Mode=OneWay, Converter={StaticResource visInvertedConverter}}" 
                                    IsActive="{x:Bind ViewModel.RatingsTask.IsNotCompleted}" />
                            </Grid>

                            <!-- Responsive VisualStates -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup>
                                    <VisualState>
                                        <!-- VisualState to be triggered for 27" desktop + -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint27}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState>
                                        <!-- VisualState for 8" laptop -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint8Landscape}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="grdCasts.(Grid.Column)" Value="0" />
                                            <Setter Target="grdCasts.(Grid.Row)" Value="1" />                                            
                                            <Setter Target="col1.Width" Value="0" />
                                            <Setter Target="grdReviews.(Grid.RowSpan)" Value="4" />
                                            <Setter Target="grdRatings.(Grid.RowSpan)" Value="4" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState>
                                        <!-- VisualState for 5" phone -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint5}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="grdCasts.(Grid.Column)" Value="0" />
                                            <Setter Target="grdCasts.(Grid.Row)" Value="1" />
                                            <Setter Target="grdReviews.(Grid.Column)" Value="0" />
                                            <Setter Target="grdReviews.(Grid.Row)" Value="2" />
                                            <Setter Target="grdRatings.(Grid.Column)" Value="0" />
                                            <Setter Target="grdRatings.(Grid.Row)" Value="3" />
                                            <Setter Target="col1.Width" Value="0" />
                                            <Setter Target="col2.Width" Value="0" />
                                            <Setter Target="col3.Width" Value="0" />
                                            <Setter Target="grdReviews.Background" Value="{ThemeResource ThemeBackground}" />
                                            <Setter Target="grd.Padding" Value="0,0,0,48" />
                                            <Setter Target="grdCreators.Padding" Value="48,0" />
                                            <Setter Target="grdCasts.Padding" Value="48,0,48,40" />
                                            <Setter Target="grdReviews.Padding" Value="48,0,48,40" />
                                            <Setter Target="grdRatings.Padding" Value="48,0" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>                            
                        </Grid>
                    </UserControl>
                </DataTemplate>
            </HubSection>

            <!-- Trailers -->
            <HubSection x:Uid="/MediaAppSample.Core/Resources/hsTrailers" Header="Trailers" Visibility="{x:Bind ViewModel.IsMovie, Mode=OneWay, Converter={StaticResource visConverter}}">
                <DataTemplate x:DataType="viewmodels:DetailsViewModel">
                    <Grid>
                        <controls:ContentItemListControl
                            ItemTemplate="{StaticResource ImageSmallTitleOverlayTemplate}"
                            ItemContainerStyle="{StaticResource MediaTileTall16x9ListViewItemContainerStyle}"
                            Background="{ThemeResource ThemeBackground}"
                            Items="{x:Bind ViewModel.TrailerItemsTask.Result, Mode=OneWay}"
                            ItemCommand="{x:Bind ViewModel.Platform.Navigation.NavigateToDetailsCommand}" 
                            SeeMoreCommand="{x:Bind ViewModel.Platform.Navigation.NavigateToMoviesCommand}"  />
                        <ProgressRing Visibility="{x:Bind ViewModel.TrailerItemsTask.IsCompleted, Mode=OneWay, Converter={StaticResource visInvertedConverter}}" 
                                      IsActive="{x:Bind ViewModel.TrailerItemsTask.IsNotCompleted}" />
                    </Grid>
                </DataTemplate>
            </HubSection>

            <!-- Related -->
            <HubSection Header="{x:Bind ViewModel.RelatedTitle, Mode=OneWay}">
                <DataTemplate x:DataType="viewmodels:DetailsViewModel">
                    <Grid>
                        <controls:ContentItemListControl
                            ItemTemplate="{StaticResource ImageCustomDataTemplate}"
                            ItemContainerStyleSelector="{StaticResource ItemTypeListViewItemContainerStyleSelector}"
                            Background="{ThemeResource SystemAccentColorBrush}"
                            Items="{x:Bind ViewModel.RelatedItemsTask.Result, Mode=OneWay}"
                            ItemCommand="{x:Bind ViewModel.Platform.Navigation.NavigateToDetailsCommand}" />
                        <ProgressRing Visibility="{x:Bind ViewModel.CreatorsTask.IsCompleted, Mode=OneWay, Converter={StaticResource visInvertedConverter}}"
                                      IsActive="{x:Bind ViewModel.CreatorsTask.IsNotCompleted}" />
                    </Grid>
                </DataTemplate>
            </HubSection>

        </Hub>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <!--VisualState for 8" tablet portrait-->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint8Portrait}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="hsFeatured.Visibility" Value="Visible" />
                        <Setter Target="hsDetails.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <!--VisualState for 5" phone-->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint5}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="hsFeatured.Visibility" Value="Collapsed" />
                        <Setter Target="hsDetails.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </Grid>
</views:DetailsViewBase>
