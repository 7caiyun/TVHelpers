<!--
// The MIT License (MIT)
//
// Copyright (c) 2016 Microsoft. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
-->
    
<views:MainViewBase
    x:Name="PageRoot"
    x:Class="MediaAppSample.UI.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:views="using:MediaAppSample.UI.Views"
    xmlns:viewmodels="using:MediaAppSample.Core.ViewModels"
    xmlns:models="using:MediaAppSample.Core.Models"
    xmlns:controls="using:MediaAppSample.UI.Controls"
    xmlns:behaviors="using:MediaAppSample.UI.Behaviors"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:interactions="using:Microsoft.Xaml.Interactions.Core"
    xmlns:resources="using:MediaAppSample.UI.Resources"
    xmlns:designTime="using:MediaAppSample.Core.ViewModels.Designer"
    d:DataContext="{d:DesignInstance designTime:MainViewModel, IsDesignTimeCreatable=True}"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <resources:Common />
                <resources:TextStyles />
                <resources:Templates />
                <resources:ListStyles />
                <resources:ControlStyles />
            </ResourceDictionary.MergedDictionaries>
            
            <DataTemplate x:Name="FeaturedContentItemDataTemplate" x:DataType="models:ContentItemBase">
                <Grid>
                    <Image Source="{x:Bind ImageFeatured, Mode=OneWay}" Stretch="UniformToFill" HorizontalAlignment="Center" />
                    <Grid Style="{StaticResource ImageLayerTreatment}">
                        <StackPanel HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="{StaticResource StandardGutterAll}" MaxWidth="400">
                            <TextBlock Text="{x:Bind Flag, Mode=OneWay}" 
                                       Style="{StaticResource CaptionAltTextBlockStyle}"
                                       Foreground="{StaticResource ImageTextForegroundBrush}" />
                            <Grid>
                                <Button x:Name="btn"
                                        Content="{x:Bind Title, Mode=OneWay}"
                                        Style="{StaticResource ContentTitleButtonStyle}"
                                        Click="btnContentItem_Click"
                                        CommandParameter="{x:Bind Mode=OneWay}" />
                                <Rectangle
                                    Margin="0,0,2,0"
                                    Fill="{ThemeResource SystemAccentColorBrush}" 
                                    Height="2" 
                                    HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>
                            </Grid>
                            <controls:Rating Value="{x:Bind UserRating, Mode=OneWay}" />
                        </StackPanel>
                    </Grid>
                </Grid>
            </DataTemplate>

        </ResourceDictionary>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Hub SectionsInViewChanged="Hub_SectionsInViewChanged">
            
            <!--Header Logo-->
            <Hub.Header>
                <controls:ViewHeader>
                    <UserControl HorizontalAlignment="Stretch">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ResponsiveDesignStates">
                                    <VisualState>
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint8Portrait}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState>
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint5}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="imgLogo.Source" Value="/Assets/HeaderLogo.png" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image 
                                x:Name="imgHeaderLogo"
                                Source="/Assets/HeaderLogo_Full.png" 
                                Stretch="None"
                                Height="{StaticResource StandardElementPixels}" 
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center" />
                            <TextBlock x:Name="tbHeaderTV" x:Uid="/MediaAppSample.Core/Resources/tbHeaderTV" Text="TV" Style="{StaticResource SubtitleTextBlockStyle}" VerticalAlignment="Center" Margin="0" Opacity="0" />
                            <TextBlock x:Name="tbHeaderMovies" x:Uid="/MediaAppSample.Core/Resources/tbHeaderMovies" Text="Movies" Style="{StaticResource SubtitleTextBlockStyle}" VerticalAlignment="Center" Margin="0" Opacity="0" />
                        </Grid>
                    </UserControl>
                </controls:ViewHeader>
            </Hub.Header>
            
            <!-- Featured Hero -->
            <HubSection x:Name="hsFeatured" Height="{x:Bind DeviceWindowHeight, Mode=OneWay}">
                <DataTemplate x:DataType="viewmodels:MainViewModel">
                    <!--Wrap Data Template in UserControl to enable Visual States in DataTemplate-->
                    <UserControl>
                        <Grid Style="{StaticResource ImageLayerTreatment}">
                            <Grid.Background>
                                <ImageBrush ImageSource="{x:Bind ViewModel.FeaturedItem.ImageFeatured, Mode=OneWay}" Stretch="UniformToFill" />
                            </Grid.Background>

                            <Grid Margin="48,0,80,66">
                                <!--Title Information-->
                                <StackPanel HorizontalAlignment="Left"
                                            VerticalAlignment="Bottom" 
                                            MaxWidth="400"
                                            Grid.Row="0">
                                    <TextBlock Text="{x:Bind ViewModel.FeaturedItem.Flag, Mode=OneWay}" 
                                               Style="{StaticResource CaptionAltTextBlockStyle}" 
                                               Foreground="{StaticResource ImageTextForegroundBrush}" />
                                    <Button Content="{x:Bind ViewModel.FeaturedItem.Title, Mode=OneWay}" 
                                            Style="{StaticResource ContentTitleButtonStyle}"
                                            Command="{x:Bind ViewModel.Platform.Navigation.NavigateToDetailsCommand}" 
                                            CommandParameter="{x:Bind ViewModel.FeaturedItem}" />
                                    <TextBlock x:Name="tbFeaturedDescription" 
                                               Margin="0,18,0,0" 
                                               Text="{x:Bind ViewModel.FeaturedItem.Description, Mode=OneWay}" 
                                               Foreground="{StaticResource ImageTextForegroundBrush}" 
                                               Style="{StaticResource BodyTextBlockStyle}" 
                                               MaxLines="4" Visibility="Collapsed" x:DeferLoadStrategy="Lazy" />
                                    <controls:Rating Value="{x:Bind ViewModel.FeaturedItem.UserRating, Mode=OneWay}"  />
                                </StackPanel>

                                <!--Vertical Queue-->
                                <Grid x:Name="grdQueueVertical" Visibility="Collapsed" x:DeferLoadStrategy="Lazy">
                                    <ListView 
                                        ItemContainerStyle="{StaticResource QueueSubhero16x9ListViewItemContainerStyle}"
                                        ItemsSource="{x:Bind ViewModel.QueueViewModel.Queue, Mode=OneWay, Converter={StaticResource takeNConverter}, ConverterParameter=3}" 
                                        behaviors:ListViewBaseCommandBehavior.Command="{x:Bind ViewModel.Platform.Navigation.NavigateToDetailsCommand}"
                                        ScrollViewer.VerticalScrollMode="Disabled"
                                        Visibility="{x:Bind ViewModel.QueueViewModel.Queue, Mode=OneWay, Converter={StaticResource visConverter}}"
                                        VerticalAlignment="Bottom" 
                                        HorizontalAlignment="Right">
                                        <ListView.Header>
                                            <Grid Padding="0,0,0,4">
                                                <TextBlock x:Uid="/MediaAppSample.Core/Resources/tbMyQueue" Foreground="{StaticResource ImageTextForegroundBrush}" Text="My Queue" Style="{StaticResource SubtitleTextBlockStyle}" Margin="12,6,0,0" />
                                                <HyperlinkButton x:Uid="/MediaAppSample.Core/Resources/lnkSeeAll" Content="See all" Margin="0,0,12,0" HorizontalAlignment="Right"  VerticalAlignment="Bottom" Command="{x:Bind ViewModel.Platform.Navigation.NavigateToQueueCommand}" />
                                            </Grid>
                                        </ListView.Header>
                                        <ListView.ItemTemplate>
                                            <DataTemplate x:DataType="models:QueueModel">
                                                <Grid Margin="0,2,0,2">
                                                    <Image Source="{x:Bind Item.ImageThumbLandscapeSmall, Mode=OneWay}" Stretch="UniformToFill" />
                                                    <Grid VerticalAlignment="Bottom" Background="{ThemeResource ThemeTitleBackground}">
                                                        <TextBlock Margin="8" Text="{x:Bind Item.Title}" TextWrapping="WrapWholeWords"/>
                                                    </Grid>
                                                </Grid>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </Grid>
                            </Grid>

                            <!-- Responsive VisualStates -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup>
                                    <!-- "Move" 'My Queue' to horizontal list from Vertical.  Disbale vertical list queue here when screen less than 1024 EP wide -->
                                    <VisualState>
                                        <!-- VisualState for 13" laptop -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint13}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="tbFeaturedDescription.Visibility" Value="Visible" />
                                            <Setter Target="grdQueueVertical.Visibility" Value="Visible" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState>
                                        <!-- VisualState for 8" tablet -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint8Landscape}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="tbFeaturedDescription.Visibility" Value="Visible" />
                                            <Setter Target="grdQueueVertical.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState>
                                        <!-- VisualState for 5" phone -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint5}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="tbFeaturedDescription.Visibility" Value="Collapsed" />
                                            <Setter Target="grdQueueVertical.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </UserControl>
                </DataTemplate>
            </HubSection>

            <!-- My Queue - Horizontal -->
            <HubSection x:Name="hsQueue" x:Uid="/MediaAppSample.Core/Resources/hsMyQueue" Header="My Queue" Visibility="Collapsed" x:DeferLoadStrategy="Lazy">
                <DataTemplate x:DataType="viewmodels:MainViewModel">
                    <controls:ContentItemListControl
                        x:Uid="/MediaAppSample.Core/Resources/hsQueueList"
                        ItemTemplate="{StaticResource QueueImageSmallTitleOverlayTemplate}"
                        ItemContainerStyle="{StaticResource MediaTileTall16x9ListViewItemContainerStyle}"
                        Items="{x:Bind ViewModel.QueueViewModel.Queue, Mode=OneWay, Converter={StaticResource takeNConverter}, ConverterParameter=4}"
                        ItemCommand="{x:Bind ViewModel.Platform.Navigation.NavigateToDetailsCommand}"
                        SeeMoreCommand="{x:Bind ViewModel.Platform.Navigation.NavigateToQueueCommand}" 
                        SeeMoreText="See all" />
                </DataTemplate>
            </HubSection>

            <!-- Movies Featured -->
            <HubSection x:Name="hsMoviesFeatured" x:Uid="/MediaAppSample.Core/Resources/hsMoviesFeatured" Height="{x:Bind DeviceWindowHeight, Mode=OneWay}" Header="Movies">
                <DataTemplate x:DataType="viewmodels:MainViewModel">
                    <controls:Carousel Margin="0,0,12,0" Data="{Binding ViewModel.MoviesFeatured, Mode=OneWay}" ItemTemplate="{StaticResource FeaturedContentItemDataTemplate}" />
                </DataTemplate>
            </HubSection>

            <!-- New Released Movies -->
            <HubSection x:Uid="/MediaAppSample.Core/Resources/hsNewReleasedMovies" Header="New Released Movies">
                <DataTemplate x:DataType="viewmodels:MainViewModel">
                    <controls:ContentItemListControl 
                        ItemTemplate="{StaticResource ImageCustomDataTemplate}"
                        ItemContainerStyle="{StaticResource Poster2x3ListViewItemContainerStyle}"
                        Items="{x:Bind ViewModel.MovieNewReleases, Mode=OneWay}"
                        ItemCommand="{x:Bind ViewModel.Platform.Navigation.NavigateToDetailsCommand}"
                        SeeMoreCommand="{x:Bind ViewModel.Platform.Navigation.NavigateToMoviesCommand}"  />
                </DataTemplate>
            </HubSection>

            <!-- TV Featured -->
            <HubSection x:Name="hsTvFeatured" x:Uid="/MediaAppSample.Core/Resources/hsTvFeatured" Height="{x:Bind DeviceWindowHeight, Mode=OneWay}" Header="TV">
                <DataTemplate x:DataType="viewmodels:MainViewModel">
                    <controls:Carousel Margin="0,0,12,0" Data="{Binding ViewModel.TvFeatured, Mode=OneWay}" ItemTemplate="{StaticResource FeaturedContentItemDataTemplate}" />
                </DataTemplate>
            </HubSection>

            <!-- New TV Episodes -->
            <HubSection x:Uid="/MediaAppSample.Core/Resources/hsNewTvEpisodes" Header="New TV Episodes">
                <DataTemplate x:DataType="viewmodels:MainViewModel">
                    <controls:ContentItemListControl 
                        ItemTemplate="{StaticResource ImageCustomDataTemplate}"
                        ItemContainerStyle="{StaticResource Tv1x1ListViewItemContainerStyle}"
                        Items="{x:Bind ViewModel.TvNewReleases, Mode=OneWay}"
                        ItemCommand="{x:Bind ViewModel.Platform.Navigation.NavigateToDetailsCommand}"
                        SeeMoreCommand="{x:Bind ViewModel.Platform.Navigation.NavigateToTVCommand}" />
                </DataTemplate>
            </HubSection>

            <!-- Sneak peeks (movie trailers) -->
            <HubSection x:Uid="/MediaAppSample.Core/Resources/hsSneakPeeks" Header="Sneak Peeks">
                <DataTemplate x:DataType="viewmodels:MainViewModel">
                    <ListView ItemContainerStyle="{StaticResource Inline16x9ListViewItemContainerStyle}"
                              ItemsSource="{x:Bind ViewModel.SneakPeeks, Mode=OneWay}"
                              ItemsPanel="{StaticResource HorizontalItemsPanelTemplate}" 
                              Padding="48,68,48,74"
                              Margin="0,0,12,0"
                              ScrollViewer.HorizontalScrollMode="Enabled"
                              ScrollViewer.VerticalScrollMode="Disabled"
                              ScrollViewer.HorizontalScrollBarVisibility="Auto">
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="models:TrailerModel">
                                <UserControl>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="{StaticResource SectionSpacingHeightGridLength}" />
                                        </Grid.RowDefinitions>

                                        <Button x:Name="btnPlay" Style="{StaticResource TransparentButtonStyle}">
                                            <interactivity:Interaction.Behaviors>
                                                <interactions:EventTriggerBehavior EventName="Click" SourceObject="{Binding ElementName=btnPlay}">
                                                    <interactions:ChangePropertyAction TargetObject="{Binding ElementName=btnMediaElement}" PropertyName="Visibility" Value="Visible" />
                                                    <interactions:ChangePropertyAction TargetObject="{Binding ElementName=mediaElement}" PropertyName="AutoPlay" Value="True" />
                                                    <interactions:CallMethodAction TargetObject="{Binding ElementName=mediaElement}" MethodName="Play" />
                                                </interactions:EventTriggerBehavior>
                                            </interactivity:Interaction.Behaviors>
                                            <Grid>
                                                <Image Source="{x:Bind ImageThumbLandscapeLarge}" Stretch="UniformToFill" />
                                                <TextBlock Text="&#x25B7;" 
                                                           FontFamily="Segoe UI Symbol" FontSize="40" 
                                                           Foreground="{StaticResource ImageTextForegroundBrush}" 
                                                           VerticalAlignment="Center" HorizontalAlignment="Center" />
                                            </Grid>
                                        </Button>
                                        
                                        <Button x:Name="btnMediaElement" Style="{StaticResource TransparentButtonStyle}" Background="{ThemeResource ThemeSectionBackground}" Visibility="Collapsed">
                                            <interactivity:Interaction.Behaviors>
                                                <interactions:EventTriggerBehavior EventName="Click" SourceObject="{Binding ElementName=btnMediaElement}">
                                                    <interactions:ChangePropertyAction TargetObject="{Binding ElementName=btnMediaElement}" PropertyName="Visibility" Value="Collapsed" />
                                                    <interactions:ChangePropertyAction TargetObject="{Binding ElementName=mediaElement}" PropertyName="AutoPlay" Value="False" />
                                                    <interactions:CallMethodAction TargetObject="{Binding ElementName=mediaElement}" MethodName="Stop" />
                                                </interactions:EventTriggerBehavior>
                                            </interactivity:Interaction.Behaviors>
                                            <MediaElement x:Name="mediaElement" Source="{x:Bind MediaUrl}" Stretch="UniformToFill" AutoPlay="False" AreTransportControlsEnabled="True">
                                                <MediaElement.TransportControls>
                                                    <MediaTransportControls IsCompact="True"/>
                                                </MediaElement.TransportControls>
                                                <interactivity:Interaction.Behaviors>
                                                    <interactions:EventTriggerBehavior EventName="MediaEnded" SourceObject="{Binding ElementName=mediaElement}">
                                                        <interactions:ChangePropertyAction TargetObject="{Binding ElementName=btnMediaElement}" PropertyName="Visibility" Value="Collapsed" />
                                                    </interactions:EventTriggerBehavior>
                                                    <interactions:EventTriggerBehavior EventName="MediaFailed" SourceObject="{Binding ElementName=mediaElement}">
                                                        <interactions:ChangePropertyAction TargetObject="{Binding ElementName=btnMediaElement}" PropertyName="Visibility" Value="Collapsed" />
                                                    </interactions:EventTriggerBehavior>
                                                </interactivity:Interaction.Behaviors>
                                            </MediaElement>
                                        </Button>
                                        
                                        <StackPanel Grid.Row="1" VerticalAlignment="Center">
                                            <TextBlock Text="{x:Bind SneakPeekTitle, Mode=OneWay}" Style="{StaticResource BodyTextBlockStyle}" />
                                            <TextBlock Text="{x:Bind SneakPeekDescription, Mode=OneWay}" Style="{StaticResource SubtleBodyTextBlockStyle}" />
                                        </StackPanel>
                                    </Grid>
                                </UserControl>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </DataTemplate>
            </HubSection>
        </Hub>
        
        <!-- Responsive VisualStates -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="ResponseDesignStates">
                    <!-- "Move" 'My Queue' to horizontal list from Vertical.  Enable horizontal queue list here -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint13}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="hsQueue.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint5}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="hsQueue.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="ViewHeaderAnimations">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.5"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="FadeInHeaderTv">
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="tbHeaderTV" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="1" />
                        <DoubleAnimation Storyboard.TargetName="tbHeaderMovies" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="0" />
                        <DoubleAnimation Storyboard.TargetName="imgHeaderLogo"  Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="0" />
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="FadeInHeaderMovies">
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="tbHeaderTV" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="0" />
                        <DoubleAnimation Storyboard.TargetName="tbHeaderMovies" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="1" />
                        <DoubleAnimation Storyboard.TargetName="imgHeaderLogo"  Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="0" />
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
    
</views:MainViewBase>